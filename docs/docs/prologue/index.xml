<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prologue on</title><link>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/</link><description>Recent content in Prologue on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/index.xml" rel="self" type="application/rss+xml"/><item><title>CSC 2770 Schedule</title><link>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/schedule/</link><pubDate>Mon, 26 Aug 2024 11:05:37 -0600</pubDate><guid>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/schedule/</guid><description>This is a tentative schedule and will change.
Grading details #
Assessment Type Weightage Additional Information General Participation 5% Quizzes 35% Announced quizzes via iLearn. EMATES 15% Assignments 15% Individual homework assignments. Midterm Examination 15% Covers lectures/materials prior to the exam. Final Examination 15% Comprehensive. Class Schedule #
Week Dates Topics Week 1 Aug 26-30 Course Introduction, Overview of Computer Architectures, Number Representation (Hex, Binary, 2â€™s Complement) Week 2 Sept 4-6 Memory Organization, CPU Architecture (Program Counter, Registers, Fetch-and-Execute Cycle, Multi-Core) (No class on Sept 2) Week 3 Sept 9-13 Distributed Architectures, Introduction to Operating Systems Week 4 Sept 16-20 Memory Management, Process Management Week 5 Sept 23-27 Concurrency, Processes, and Threads Week 6 Sept 30 - Oct 4 Networking Fundamentals, The Internet, Network Edge Week 7 Oct 7-11 Network Core, Delay, Loss, Throughput Week 8 Oct 14-16 Protocol Layers and Service Models, Addressing Schemes (TCP/IP, Routing) (No class on Oct 18) Week 9 Oct 21-25 Security Fundamentals, Introduction to Parallelism Week 10 Oct 28 - Nov 1 Asynchrony, Concurrency, Parallelism, Locality Week 11 Nov 13-15 Performance Optimization Techniques Week 12 Nov 18-22 Review and Exam 2 Preparation Week 13 Nov 25-29 Advanced Topics in Networking: VLAN, Protocol Implementation (No class on Nov 27-29) Week 14 Dec 2-4 Distributed Systems, Remote Procedure Calls Final Exam Dec 9 Comprehensive Final Exam</description></item><item><title>Program 1: Network Packet Handling</title><link>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/pa-packet-handling/</link><pubDate>Thu, 12 Jan 2023 11:09:01 -0600</pubDate><guid>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/pa-packet-handling/</guid><description>This is an INDIVIDUAL Assignment (Do not collaborate) #
Instructions #
Please read the entire instructions and the skeleton code provided for the server and the client before you start coding.
Setup #
Create two separate Python files for the server and client, named server.py and client.py, respectively. Copy and paste the provided skeleton code into the respective files. Implementation #
Server: Complete the server code by implementing the unpack_packet function.</description></item><item><title>Program 2 - Simple Protocol</title><link>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/pa-simple-protocol/</link><pubDate>Thu, 12 Jan 2023 11:09:01 -0600</pubDate><guid>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/pa-simple-protocol/</guid><description>This is a GROUP Assignment
Objectives
Learn to create network packets.
Learn how packets can be sent over the network.
Familiarize you with the concept of sockets.
Learn packing structures, endianness, unpacking, and interpreting network data.
Learn how to use actual data from a packet.
Use packet capture to visually inspect protocols.
Overview
In this warmup project, you are going to implement a client and a server program that will send a command over the network.</description></item><item><title>Program 3 - Detect a Person</title><link>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/pa-detect-person/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tntech-ngin.github.io/F24-CSC2770/docs/prologue/pa-detect-person/</guid><description>Objectives
The objective of this assignment is to design and implement a client-server system using Raspberry Pi devices. The server will control an LED, while the client will sense motion using a Passive Infrared Sensor (PIR) and communicate with the server to blink the LED. The assignment includes establishing a three-way handshake, sending blink duration and count information, acknowledging the data, and responding to motion detection by blinking the LED.</description></item></channel></rss>